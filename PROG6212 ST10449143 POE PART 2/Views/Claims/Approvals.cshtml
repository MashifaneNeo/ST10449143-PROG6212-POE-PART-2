@model List<PROG6212_ST10449143_POE_PART_1.Models.Claim>
@{
    ViewData["Title"] = "Claim Approvals";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary">
            <i class="fas fa-check-circle me-2"></i>Claim Approvals
        </h2>
        <div class="btn-group">
            <button class="btn btn-outline-primary active" onclick="filterClaims('all')">All Claims</button>
            <button class="btn btn-outline-warning" onclick="filterClaims('under review')">Under Review</button>
            <button class="btn btn-outline-secondary" onclick="filterClaims('submitted')">Submitted</button>
        </div>
    </div>

    @if (TempData["ApprovalMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["ApprovalMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            <i class="fas fa-info-circle me-2"></i>No pending claims for approval.
        </div>
    }
    else
    {
        <div class="row" id="claimsContainer">
            @foreach (var claim in Model)
            {
                <div class="col-md-6 mb-4 claim-card" data-status="@claim.Status.ToLower()">
                    <div class="card h-100 border-0 shadow-sm">
                        <div class="card-header @GetHeaderClass(claim.Status) text-dark d-flex justify-content-between align-items-center">
                            <h6 class="mb-0">Claim #@claim.Id</h6>
                            <span class="badge @GetStatusBadgeClass(claim.Status)">@claim.Status</span>
                        </div>
                        <div class="card-body">
                            <div class="row mb-2">
                                <div class="col-6"><strong>Lecturer:</strong></div>
                                <div class="col-6">@claim.LecturerName</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-6"><strong>Month:</strong></div>
                                <div class="col-6">@claim.Month</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-6"><strong>Hours:</strong></div>
                                <div class="col-6">@claim.HoursWorked.ToString("0.00")</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-6"><strong>Rate:</strong></div>
                                <div class="col-6">R @claim.HourlyRate.ToString("0.00")</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-6"><strong>Total:</strong></div>
                                <div class="col-6 text-success fw-bold">R @claim.TotalAmount.ToString("0.00")</div>
                            </div>
                            @if (!string.IsNullOrEmpty(claim.AdditionalNotes))
                            {
                                <div class="row mb-2">
                                    <div class="col-12">
                                        <strong>Notes:</strong>
                                        <p class="mb-0 text-muted">@claim.AdditionalNotes</p>
                                    </div>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(claim.SupportingDocument))
                            {
                                <div class="row mb-2">
                                    <div class="col-12">
                                        <strong>Document:</strong>
                                        <span class="text-primary">
                                            <i class="fas fa-file me-1"></i>
                                            @{
                                                var fileParts = claim.SupportingDocument.Split('|');
                                                var displayName = fileParts.Length > 1 ? fileParts[1] : "Attached Document";
                                            }
                                            @displayName
                                        </span>
                                    </div>
                                </div>
                            }
                            <div class="row mb-2">
                                <div class="col-12">
                                    <small class="text-muted">
                                        <strong>Submitted:</strong> @claim.SubmittedDate.ToString("MMM dd, yyyy HH:mm")
                                    </small>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-light">
                            <div class="row g-2">
                                <div class="col-md-6">
                                    <!-- FIXED: Simplified Approve form without role parameter -->
                                    <form asp-action="Approve" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@claim.Id" />
                                        <button type="submit" class="btn btn-success w-100"
                                                onclick="return confirm('Are you sure you want to approve claim #@claim.Id?')">
                                            <i class="fas fa-check me-1"></i>Approve
                                        </button>
                                    </form>
                                </div>
                                <div class="col-md-6">
                                    <button type="button" class="btn btn-danger w-100"
                                            data-bs-toggle="modal" data-bs-target="#rejectModal@(claim.Id)">
                                        <i class="fas fa-times me-1"></i>Reject
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Reject Modal -->
                <div class="modal fade" id="rejectModal@(claim.Id)" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Reject Claim #@claim.Id</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <!-- FIXED: Simplified Reject form without role parameter -->
                            <form asp-action="Reject" method="post">
                                <input type="hidden" name="id" value="@claim.Id" />
                                <div class="modal-body">
                                    <div class="mb-3">
                                        <label class="form-label">Reason for Rejection</label>
                                        <textarea name="rejectionReason" class="form-control" rows="3"
                                          placeholder="Please provide a reason for rejection..." required></textarea>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-danger">Confirm Rejection</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        function filterClaims(status) {
            const claims = document.querySelectorAll('.claim-card');
            claims.forEach(claim => {
                if (status === 'all') {
                    claim.style.display = 'block';
                } else if (status === 'submitted' && claim.dataset.status === 'submitted') {
                    claim.style.display = 'block';
                } else if (status === 'under review' && claim.dataset.status.includes('under review')) {
                    claim.style.display = 'block';
                } else {
                    claim.style.display = 'none';
                }
            });

            // Update active button state
            document.querySelectorAll('.btn-group .btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');
        }
    </script>
}

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Submitted" => "bg-secondary",
            "Under Review" => "bg-warning",
            "Approved" => "bg-success",
            "Rejected" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetHeaderClass(string status)
    {
        return status switch
        {
            "Submitted" => "bg-light",
            "Under Review" => "bg-warning",
            _ => "bg-light"
        };
    }
}